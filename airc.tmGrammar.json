{
	"scopeName": "source.airc",
	"patterns": [
		{
			"include": "#expression"
		}
	],
	"repository": {
		"expression": {
			"patterns": [
				{
					"include": "#comment"	
				},
				{
					"include": "#op"
				},
				{
					"include": "#control"
				},
				{
					"include": "#math"
				},
				{
					"include": "#macro"	
				},
				{
					"include": "#char"
				},
				{
					"include": "#integer"
				},
				{
					"include": "#block-expression"
				}
			]
		},
		"comment": {
			"match": ";.*",
			"name": "comment.line.semicolon"	
		},
		"op": {
			"match": "^\\s*(push|set|pop|dup|swpb|swpn|swp|tag|ctg|mtg|ptg|rot|out|in|raw)",
			"name": "keyword.other"
		},
		"control": {
			"match": "^\\s*(ifn|if|loop|endif|end)",
			"name": "keyword.control"
		},
		"math": {
			"match": "^\\s*(add|sub|mul|div|eq|neq)",
			"name": "keyword.operator"
		},
		"macro": {
			"match": "^\\s*[a-zA-Z]+",
			"name": "keyword"
		},
		"char": {
			"match": "'(.|\\\\n)'",
			"name": "string.quoted.single"
		},
		"integer": {
			"match": "\\d+",
			"name": "constant.numeric.integer"
		},
		"block-expression": {
			"begin": "\\(|\\{|\\[",
			"end": "\\)|\\}|\\]",
			"beginCaptures": {
				"0": {
					"name": "punctuation.paren.open"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.paren.close"
				}
			},
			"name": "expression.group",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		}
	}
}
